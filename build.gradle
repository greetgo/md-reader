import jars.ProjectExtJarSeparator

plugins {
  id 'java'
  id 'org.springframework.boot' version '3.0.6'
  id 'io.spring.dependency-management' version '1.1.0'
}

group = 'kz.greetgo.md_reader'
version = rootProject.file('version/version.txt').text.trim()
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
  maven {
    url "https://repository.groupdocs.com/repo/"
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-freemarker'
  implementation 'org.springframework.boot:spring-boot-starter-web'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  implementation 'am.ik.marked4j:marked4j:0.11.0'

  testImplementation 'org.assertj:assertj-core:3.24.2'

//  compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

  //implementation 'com.groupdocs:groupdocs-conversion:22.8.1'

}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.register('dist', ProjectExtJarSeparator) {
  group 'build'
  dependsOn jar

  doFirst {
    for (File file : sourceSets.main.runtimeClasspath.getFiles()) {
      if (file.exists() && file.getName().toLowerCase().endsWith(".jar")) {
        addFileJar file
      }
    }
  }

  addFileJar jar.archiveFile.get().asFile

  rootDir rootDir

  mainClass "kz.greetgo.md_reader.MdReaderApplication"

  jarBaseName "md-reader"

  version project.version

  distDir buildDir.toPath().resolve("dist").toFile()

}

tasks.register('deleteInnerBuilds', Delete) {
  delete projectDir.toPath().resolve('docker-build').resolve('image-02-extern').resolve('build')
  delete projectDir.toPath().resolve('docker-build').resolve('image-03-app').resolve('build')
}

clean.dependsOn 'deleteInnerBuilds'
